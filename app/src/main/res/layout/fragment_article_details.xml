<?xml version="1.0" encoding="utf-8"?>
<layout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <variable
            name="article"
            type="com.ang.acb.materialme.data.model.Article" />
    </data>

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:id="@+id/details_coordinator_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.details.DetailsActivity">

        <!-- Note: To add a collapsing toolbar to your layout, place
        the CollapsingToolbarLayout inside an AppBarLayout. Then, add
        a Toolbar and any other views as a child to the collapsing
        toolbar layout. You can add as many views as you like to the
        CollapsingToolbarLayout, but make sure that the Toolbar is
        the last child of the CollapsingToolbarLayout. This ensures
        that the views are drawn in the correct order. Also make sure
        that the entire view structure is inside a CoordinatorLayout
        to take advantage of the CollapsingToolbarLayoutâ€™s features.
        https://material.io/develop/android/components/collapsing-toolbar-layout/ -->
        <com.google.android.material.appbar.AppBarLayout
            android:id="@+id/details_app_bar"
            android:layout_width="match_parent"
            android:layout_height="@dimen/details_toolbar_height"
            android:theme="@style/AppBarOverlay">

            <!-- A toolbar with a collapsing image -->
            <com.google.android.material.appbar.CollapsingToolbarLayout
                android:id="@+id/details_collapsing_toolbar"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:contentScrim="?attr/colorPrimary"
                app:expandedTitleMarginEnd="@dimen/details_collapsing_toolbar_title_margin"
                app:expandedTitleMarginStart="@dimen/details_collapsing_toolbar_title_margin"
                app:layout_scrollFlags="scroll|exitUntilCollapsed">

                <ImageView
                    android:id="@+id/details_article_photo"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:scaleType="centerCrop"
                    android:contentDescription="@string/article_photo_content_description"
                    app:layout_collapseMode="parallax"
                    tools:src="@tools:sample/backgrounds/scenic" />

                <androidx.appcompat.widget.Toolbar
                    android:id="@+id/details_toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    app:titleTextAppearance="@style/TextAppearance.ToolbarFont"
                    app:layout_collapseMode="pin"
                    app:popupTheme="@style/PopupOverlay" />

            </com.google.android.material.appbar.CollapsingToolbarLayout>
        </com.google.android.material.appbar.AppBarLayout>

        <!-- Note: we need to define an association between the AppBarLayout
        and the View that will be scrolled. Add an app:layout_behavior to a
        RecyclerView or any other View capable of nested scrolling such as
        NestedScrollView. The support library contains a special string
        resource, @string/appbar_scrolling_view_behavior, that maps to
        AppBarLayout.ScrollingViewBehavior, which is used to notify the
        AppBarLayout when scroll events occur on this particular view. The
        behavior must be established on the view that triggers the event. See:
        https://guides.codepath.com/android/Handling-Scrolls-with-CoordinatorLayout -->
        <androidx.core.widget.NestedScrollView
            android:id="@+id/details_nested_scroll_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">

            <include
                android:id="@+id/content_partial_details"
                layout="@layout/content_partial_details"
                app:article="@{article}" />

        </androidx.core.widget.NestedScrollView>

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>